#.......
#仅供参考
#.......
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-frontend
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-frontend
  namespace: default
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-frontend
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-frontend
subjects:
- kind: ServiceAccount
  name: prometheus-frontend
  namespace: default
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: frontend
  namespace: default
  labels:
    prometheus: frontend
spec:
  serviceAccountName: prometheus-frontend
  version: v1.7.1
  serviceMonitorSelector:
    matchLabels:
      tier: frontend
  resources:
    requests:
      # 2Gi is default, but won't schedule if you don't have a node with >2Gi
      # memory. Modify based on your target and time-series count for
      # production use. This value is mainly meant for demonstration/testing
      # purposes.
      memory: 400Mi
  alerting:
    alertmanagers:
    - namespace: monitoring
      name: alertmanager-main
      port: web
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-frontend
  namespace: default
spec:
  type: NodePort
  ports:
  - name: web
    nodePort: 30100
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: frontend
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: frontend
  namespace: default
  labels:
    tier: frontend
spec:
  selector:
    matchLabels:
      tier: frontend
  targetLabels:
    - tier
  endpoints:
  - port: web
    interval: 10s
  namespaceSelector:
    matchNames:
      - default
---
kind: Service
apiVersion: v1
metadata:
  name: example-app
  labels:
    tier: frontend
  namespace: default
spec:
  selector:
    app.kubernetes.io/name: example-app
  ports:
  - name: web
    protocol: TCP
    port: 8080
    targetPort: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-app
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: example-app
      version: 1.1.3
  replicas: 4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: example-app
        version: 1.1.3
    spec:
      containers:
      - name: example-app
        image: quay.io/fabxc/prometheus_demo_service
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
