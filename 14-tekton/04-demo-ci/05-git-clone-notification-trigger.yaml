apiVersion: v1
kind: Secret
metadata:
  name: gitlab-secret
  namespace: tekton-pipelines
type: Opaque
stringData:
  secretToken: "1234567"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-event-listener
  namespace: tekton-pipelines
spec:
  serviceAccountName: tekton-triggers-example-sa
  triggers:
    - triggerRef: github-listener-trigger
  resources:
    kubernetesResource:
      serviceType: NodePort
---
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: github-listener-trigger
  namespace: tekton-pipelines
spec:
  interceptors:
    - name: "verify-github-payload"
      ref:
        name: "gitlab"
        kind: ClusterInterceptor
      params:
      - name: "secretRef"
        value:
            secretName: "gitlab-secret"
            secretKey: "secretToken"
      - name: "eventTypes"
        value: ["Push Hook"]			
    - name: "CEL filter: only when PRs are opened"
      ref:
        name: "cel"
      params:
        - name: "overlays"
          value:
            - key: branch_name
              expression: "body.ref.split('/')[2]" #Here we are splitting the body.ref as it gives output "ref/head/<branch name or tag>" with "/" to grep only branch name.
  bindings:
    - ref: binding
  template:
    ref: trigger-template
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: binding
  namespace: tekton-pipelines
spec:
  params:
    - name: gitrevision-tag
      value: $(extensions.branch_name) #the branch name that we split in trigger
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: trigger-template
  namespace: tekton-pipelines
spec:
  params:
    - name: gitrevision-tag
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: git-clone-notification-
      spec:
        serviceAccountName: pipeline-slack
        pipelineRef:
          name: git-clone-notification
        podTemplate:
          securityContext:
            fsGroup: 1001
        params:
          - name: gitrevision-tag
            value: $(tt.params.gitrevision-tag) #This value will be passed from trigger binding.
        workspaces:
          #- name: shared-data
          # volumeClaimTemplate:
          #    spec:
          #     accessModes:
          #       - ReadWriteOnce
          #      resources:
          #        requests:
          #          storage: 1Gi
        - name: shared-data
          persistentVolumeClaim:
            claimName: slack-pvc
        - name: git-credentials
          secret:
            secretName: git-credentials
